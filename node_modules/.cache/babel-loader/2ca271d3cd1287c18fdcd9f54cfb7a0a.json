{"ast":null,"code":"var _jsxFileName = \"/Users/wymersam/dev/language-test-app/language-test-app/src/components/LanguageTests/AdvancedTests/AdvancedTestThree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { advancedQuestionsThree } from \"../../../questions/advanced-questions-three\";\nimport FinalTestResults from \"../../ResultsPages/FinalTestResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdvancedTestThree(newScore) {\n  _s();\n\n  const [indexLanguageTest, setIndexLanguageTest] = useState(0);\n  const {\n    answerOptions,\n    questionNumber,\n    id,\n    question\n  } = advancedQuestionsThree[indexLanguageTest];\n  const [score, setScore] = useState(newScore.newScore.newScore);\n  const [testComplete, setTestComplete] = useState(false);\n\n  function handleAnswerClickTest(isCorrect) {\n    if (isCorrect) {\n      setScore(score + 1);\n      nextQuestionTest();\n    } else {\n      nextQuestionTest();\n    }\n  }\n\n  function nextQuestionTest() {\n    let nextQuestionTest = id + 1;\n\n    if (nextQuestionTest < advancedQuestionsThree.length) {\n      setIndexLanguageTest(nextQuestionTest);\n    } else {\n      setTestComplete(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: testComplete ? /*#__PURE__*/_jsxDEV(FinalTestResults, {\n      finalScore: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"language-test-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"sub-question-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"In this section you must choose the word which best fits each space in the text below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"language-test-question\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: [answerOptions.map((answerOption, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswerClickTest(answerOption.isCorrect),\n          className: \"answer-btn\",\n          children: answerOption.answerText\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question \", questionNumber, \"/20\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, questionNumber, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(AdvancedTestThree, \"N7jhE6/4vADX0y4bPcX+bXJUIuU=\");\n\n_c = AdvancedTestThree;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdvancedTestThree\");","map":{"version":3,"sources":["/Users/wymersam/dev/language-test-app/language-test-app/src/components/LanguageTests/AdvancedTests/AdvancedTestThree.js"],"names":["React","useState","advancedQuestionsThree","FinalTestResults","AdvancedTestThree","newScore","indexLanguageTest","setIndexLanguageTest","answerOptions","questionNumber","id","question","score","setScore","testComplete","setTestComplete","handleAnswerClickTest","isCorrect","nextQuestionTest","length","map","answerOption","index","answerText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,sBAAT,QAAuC,6CAAvC;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AAAA;;AAClD,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CN,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAEO,IAAAA,aAAF;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA,EAAjC;AAAqCC,IAAAA;AAArC,MACJT,sBAAsB,CAACI,iBAAD,CADxB;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACI,QAAQ,CAACA,QAAT,CAAkBA,QAAnB,CAAlC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;;AACA,WAASe,qBAAT,CAA+BC,SAA/B,EAA0C;AACxC,QAAIA,SAAJ,EAAe;AACbJ,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAM,MAAAA,gBAAgB;AACjB,KAHD,MAGO;AACLA,MAAAA,gBAAgB;AACjB;AACF;;AAED,WAASA,gBAAT,GAA4B;AAC1B,QAAIA,gBAAgB,GAAGR,EAAE,GAAG,CAA5B;;AACA,QAAIQ,gBAAgB,GAAGhB,sBAAsB,CAACiB,MAA9C,EAAsD;AACpDZ,MAAAA,oBAAoB,CAACW,gBAAD,CAApB;AACD,KAFD,MAEO;AACLH,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF;;AAED,sBACE;AAAA,cACGD,YAAY,gBACX,QAAC,gBAAD;AAAkB,MAAA,UAAU,EAAEF;AAA9B;AAAA;AAAA;AAAA;AAAA,YADW,gBAGX;AAAS,MAAA,SAAS,EAAC,yBAAnB;AAAA,8BACE;AAAS,QAAA,SAAS,EAAC,wBAAnB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA,kBAAwCD;AAAxC;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,mBACGH,aAAa,CAACY,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,kBACjB;AAEE,UAAA,OAAO,EAAE,MAAMN,qBAAqB,CAACK,YAAY,CAACJ,SAAd,CAFtC;AAGE,UAAA,SAAS,EAAC,YAHZ;AAAA,oBAKGI,YAAY,CAACE;AALhB,WACOD,KADP;AAAA;AAAA;AAAA;AAAA,gBADD,CADH,eAUE;AAAA,kCAAab,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SAAqCA,cAArC;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AA6BD;;GArDuBL,iB;;KAAAA,iB","sourcesContent":["import React, { useState } from \"react\";\nimport { advancedQuestionsThree } from \"../../../questions/advanced-questions-three\";\nimport FinalTestResults from \"../../ResultsPages/FinalTestResults\";\n\nexport default function AdvancedTestThree(newScore) {\n  const [indexLanguageTest, setIndexLanguageTest] = useState(0);\n  const { answerOptions, questionNumber, id, question } =\n    advancedQuestionsThree[indexLanguageTest];\n  const [score, setScore] = useState(newScore.newScore.newScore);\n  const [testComplete, setTestComplete] = useState(false);\n  function handleAnswerClickTest(isCorrect) {\n    if (isCorrect) {\n      setScore(score + 1);\n      nextQuestionTest();\n    } else {\n      nextQuestionTest();\n    }\n  }\n\n  function nextQuestionTest() {\n    let nextQuestionTest = id + 1;\n    if (nextQuestionTest < advancedQuestionsThree.length) {\n      setIndexLanguageTest(nextQuestionTest);\n    } else {\n      setTestComplete(true);\n    }\n  }\n\n  return (\n    <>\n      {testComplete ? (\n        <FinalTestResults finalScore={score} />\n      ) : (\n        <section className=\"language-test-container\">\n          <section className=\"sub-question-container\">\n            <h2>\n              In this section you must choose the word which best fits each\n              space in the text below.\n            </h2>\n          </section>\n          <h3 className=\"language-test-question\">{question}</h3>\n          <div className=\"answer-section\" key={questionNumber}>\n            {answerOptions.map((answerOption, index) => (\n              <button\n                key={index}\n                onClick={() => handleAnswerClickTest(answerOption.isCorrect)}\n                className=\"answer-btn\"\n              >\n                {answerOption.answerText}\n              </button>\n            ))}\n            <p>Question {questionNumber}/20</p>\n          </div>\n        </section>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}