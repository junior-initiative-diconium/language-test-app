{"ast":null,"code":"var _jsxFileName = \"/Users/wymersam/dev/language-test-app/language-test-app/src/components/LanguageTests/LanguageTestSix.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { questionsSix } from \"../../questions/language-test-questions-six\";\nimport TestResults from \"../ResultsPages/TestResults\";\nimport OptionToProgress from \"../OptionToProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LanguageTestSix(scoreFive) {\n  _s();\n\n  const currentScore = scoreFive;\n  const [indexLanguageTest, setIndexLanguageTest] = useState(0);\n  const {\n    question,\n    answerOptions,\n    questionNumber,\n    id\n  } = questionsSix[indexLanguageTest];\n  const [score, setScore] = useState(currentScore.scoreFive);\n  const [testComplete, setTestComplete] = useState(false);\n\n  function handleAnswerClickTest(isCorrect) {\n    if (isCorrect) {\n      setScore(score + 1);\n      nextQuestionTest();\n    } else {\n      nextQuestionTest();\n    }\n  }\n\n  function nextQuestionTest() {\n    let nextQuestionTest = id + 1;\n\n    if (nextQuestionTest < questionsSix.length) {\n      setIndexLanguageTest(nextQuestionTest);\n    } else {\n      setTestComplete(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: testComplete && score < 35 ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(TestResults, {\n        scoreSix: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : testComplete && score >= 35 ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(OptionToProgress, {\n        scoreSix: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-test-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"sub-question-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"In this section you must choose the word which best fits each space in the text below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"language-test-question\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: [answerOptions.map((answerOption, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          id: index,\n          onClick: () => handleAnswerClickTest(answerOption.isCorrect),\n          className: \"answer-btn test-btn\",\n          children: answerOption.answerText\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question \", questionNumber, \"/40\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, questionNumber, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(LanguageTestSix, \"ldW8CPC2KfZDSDGHtLwsVZgZiSE=\");\n\n_c = LanguageTestSix;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageTestSix\");","map":{"version":3,"sources":["/Users/wymersam/dev/language-test-app/language-test-app/src/components/LanguageTests/LanguageTestSix.js"],"names":["React","useState","questionsSix","TestResults","OptionToProgress","LanguageTestSix","scoreFive","currentScore","indexLanguageTest","setIndexLanguageTest","question","answerOptions","questionNumber","id","score","setScore","testComplete","setTestComplete","handleAnswerClickTest","isCorrect","nextQuestionTest","length","map","answerOption","index","answerText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,6CAA7B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;;;AAEA,eAAe,SAASC,eAAT,CAAyBC,SAAzB,EAAoC;AAAA;;AACjD,QAAMC,YAAY,GAAGD,SAArB;AACA,QAAM,CAACE,iBAAD,EAAoBC,oBAApB,IAA4CR,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA,aAAZ;AAA2BC,IAAAA,cAA3B;AAA2CC,IAAAA;AAA3C,MACJX,YAAY,CAACM,iBAAD,CADd;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACM,YAAY,CAACD,SAAd,CAAlC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,WAASiB,qBAAT,CAA+BC,SAA/B,EAA0C;AACxC,QAAIA,SAAJ,EAAe;AACbJ,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAM,MAAAA,gBAAgB;AACjB,KAHD,MAGO;AACLA,MAAAA,gBAAgB;AACjB;AACF;;AAED,WAASA,gBAAT,GAA4B;AAC1B,QAAIA,gBAAgB,GAAGP,EAAE,GAAG,CAA5B;;AACA,QAAIO,gBAAgB,GAAGlB,YAAY,CAACmB,MAApC,EAA4C;AAC1CZ,MAAAA,oBAAoB,CAACW,gBAAD,CAApB;AACD,KAFD,MAEO;AACLH,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF;;AAED,sBACE;AAAA,cACGD,YAAY,IAAIF,KAAK,GAAG,EAAxB,gBACC;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAIGE,YAAY,IAAIF,KAAK,IAAI,EAAzB,gBACF;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADE,gBAKF;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACE;AAAS,QAAA,SAAS,EAAC,wBAAnB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA,kBAAwCJ;AAAxC;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,mBACGC,aAAa,CAACW,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,kBACjB;AACE,UAAA,EAAE,EAAEA,KADN;AAGE,UAAA,OAAO,EAAE,MAAMN,qBAAqB,CAACK,YAAY,CAACJ,SAAd,CAHtC;AAIE,UAAA,SAAS,EAAC,qBAJZ;AAAA,oBAMGI,YAAY,CAACE;AANhB,WAEOD,KAFP;AAAA;AAAA;AAAA;AAAA,gBADD,CADH,eAWE;AAAA,kCAAaZ,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA,SAAqCA,cAArC;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ,mBADF;AAqCD;;GA/DuBP,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\nimport { questionsSix } from \"../../questions/language-test-questions-six\";\nimport TestResults from \"../ResultsPages/TestResults\";\nimport OptionToProgress from \"../OptionToProgress\";\n\nexport default function LanguageTestSix(scoreFive) {\n  const currentScore = scoreFive;\n  const [indexLanguageTest, setIndexLanguageTest] = useState(0);\n  const { question, answerOptions, questionNumber, id } =\n    questionsSix[indexLanguageTest];\n  const [score, setScore] = useState(currentScore.scoreFive);\n  const [testComplete, setTestComplete] = useState(false);\n\n  function handleAnswerClickTest(isCorrect) {\n    if (isCorrect) {\n      setScore(score + 1);\n      nextQuestionTest();\n    } else {\n      nextQuestionTest();\n    }\n  }\n\n  function nextQuestionTest() {\n    let nextQuestionTest = id + 1;\n    if (nextQuestionTest < questionsSix.length) {\n      setIndexLanguageTest(nextQuestionTest);\n    } else {\n      setTestComplete(true);\n    }\n  }\n\n  return (\n    <>\n      {testComplete && score < 35 ? (\n        <section>\n          <TestResults scoreSix={score} />\n        </section>\n      ) : testComplete && score >= 35 ? (\n        <section>\n          <OptionToProgress scoreSix={score} />\n        </section>\n      ) : (\n        <div className=\"language-test-container\">\n          <section className=\"sub-question-container\">\n            <h2>\n              In this section you must choose the word which best fits each\n              space in the text below.\n            </h2>\n          </section>\n\n          <h3 className=\"language-test-question\">{question}</h3>\n          <div className=\"answer-section\" key={questionNumber}>\n            {answerOptions.map((answerOption, index) => (\n              <button\n                id={index}\n                key={index}\n                onClick={() => handleAnswerClickTest(answerOption.isCorrect)}\n                className=\"answer-btn test-btn\"\n              >\n                {answerOption.answerText}\n              </button>\n            ))}\n            <p>Question {questionNumber}/40</p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}