{"ast":null,"code":"var _jsxFileName = \"/Users/wymersam/dev/language-test-app/language-test-app/src/components/PretestQuestions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { MyContext } from \"../MyContext\";\nimport { pretestQuestions } from \"../questions/pretest-questions\";\nimport LanguageTestOne from \"./LanguageTests/LanguageTestOne\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PretestQuestions() {\n  _s();\n\n  const [index, setIndex] = useState(0);\n  const {\n    questionTextGerman,\n    questionTextEnglish,\n    answerOptions\n  } = pretestQuestions[index];\n  const [classOptions, setClassOptions] = useState([]);\n  const [courseMedia, setCourseMedia] = useState([]);\n  const [formComplete, setFormComplete] = useState(false);\n  const [style, setStyle] = useState(\"pretest-answer-btn\");\n\n  function handleAnswerClick(e, answerClass) {\n    let current = e.target;\n    current.classList.toggle(\"pretest-answer-btn-clicked\");\n    handleAnswer(answerClass);\n  }\n\n  function handleAnswer(answerClass) {\n    if (pretestQuestions[index].id === 2) {\n      handleCourseMedia(answerClass);\n    } else {\n      handleAnswerClass(answerClass);\n    }\n  }\n\n  function handleCourseMedia(answerClass) {\n    if (courseMedia.includes(answerClass)) {\n      const newCourseMedia = courseMedia.filter(t => t !== answerClass);\n      setCourseMedia(newCourseMedia);\n    } else setCourseMedia([...courseMedia, answerClass]);\n  }\n\n  function handleAnswerClass(answerClass) {\n    if (classOptions.includes(answerClass)) {\n      const newAnswerClass = classOptions.filter(t => t !== answerClass);\n      setClassOptions(newAnswerClass);\n    } else setClassOptions([...classOptions, answerClass]);\n  }\n\n  function nextQuestion() {\n    let nextQuestion = index + 1;\n\n    if (nextQuestion < pretestQuestions.length) {\n      setIndex(nextQuestion);\n      setStyle(\"\");\n      setStyle(\"pretest-answer-btn-refresh\");\n    } else {\n      setFormComplete(true);\n    }\n  } //localStorage.clear(); clear local storage at end of session\n\n\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      course: classOptions\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pretest-container\",\n      children: formComplete ? /*#__PURE__*/_jsxDEV(LanguageTestOne, {\n        courses: classOptions,\n        media: courseMedia\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"pretest-questions-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"visually-hidden\",\n            children: \"Pretest Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"pretest-question-text-german\",\n            children: questionTextGerman\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"pretest-question-text-english\",\n            children: questionTextEnglish\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"pretest-answer-section\",\n          children: [answerOptions.map((answerOption, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"pretest-answer-btn\",\n            className: style,\n            onClick: e => handleAnswerClick(e, answerOption.answerClass),\n            children: answerOption.answerText\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => nextQuestion(),\n            className: \"next-btn\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [classOptions, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: courseMedia\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PretestQuestions, \"2d83QjzWwSfcWcxXaoFnCh27KQo=\");\n\n_c = PretestQuestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"PretestQuestions\");","map":{"version":3,"sources":["/Users/wymersam/dev/language-test-app/language-test-app/src/components/PretestQuestions.js"],"names":["React","useState","MyContext","pretestQuestions","LanguageTestOne","PretestQuestions","index","setIndex","questionTextGerman","questionTextEnglish","answerOptions","classOptions","setClassOptions","courseMedia","setCourseMedia","formComplete","setFormComplete","style","setStyle","handleAnswerClick","e","answerClass","current","target","classList","toggle","handleAnswer","id","handleCourseMedia","handleAnswerClass","includes","newCourseMedia","filter","t","newAnswerClass","nextQuestion","length","course","map","answerOption","answerText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { MyContext } from \"../MyContext\";\nimport { pretestQuestions } from \"../questions/pretest-questions\";\nimport LanguageTestOne from \"./LanguageTests/LanguageTestOne\";\n\nexport default function PretestQuestions() {\n  const [index, setIndex] = useState(0);\n  const { questionTextGerman, questionTextEnglish, answerOptions } =\n    pretestQuestions[index];\n  const [classOptions, setClassOptions] = useState([]);\n  const [courseMedia, setCourseMedia] = useState([]);\n  const [formComplete, setFormComplete] = useState(false);\n  const [style, setStyle] = useState(\"pretest-answer-btn\");\n\n  function handleAnswerClick(e, answerClass) {\n    let current = e.target;\n    current.classList.toggle(\"pretest-answer-btn-clicked\");\n    handleAnswer(answerClass);\n  }\n\n  function handleAnswer(answerClass) {\n    if (pretestQuestions[index].id === 2) {\n      handleCourseMedia(answerClass);\n    } else {\n      handleAnswerClass(answerClass);\n    }\n  }\n\n  function handleCourseMedia(answerClass) {\n    if (courseMedia.includes(answerClass)) {\n      const newCourseMedia = courseMedia.filter((t) => t !== answerClass);\n      setCourseMedia(newCourseMedia);\n    } else setCourseMedia([...courseMedia, answerClass]);\n  }\n\n  function handleAnswerClass(answerClass) {\n    if (classOptions.includes(answerClass)) {\n      const newAnswerClass = classOptions.filter((t) => t !== answerClass);\n      setClassOptions(newAnswerClass);\n    } else setClassOptions([...classOptions, answerClass]);\n  }\n\n  function nextQuestion() {\n    let nextQuestion = index + 1;\n    if (nextQuestion < pretestQuestions.length) {\n      setIndex(nextQuestion);\n      setStyle(\"\");\n      setStyle(\"pretest-answer-btn-refresh\");\n    } else {\n      setFormComplete(true);\n    }\n  }\n  //localStorage.clear(); clear local storage at end of session\n\n  return (\n    <MyContext.Provider value={{ course: classOptions }}>\n      <div className=\"pretest-container\">\n        {formComplete ? (\n          <LanguageTestOne courses={classOptions} media={courseMedia} />\n        ) : (\n          <section>\n            <section className=\"pretest-questions-container\">\n              <h1 className=\"visually-hidden\">Pretest Questions</h1>\n              <h2 className=\"pretest-question-text-german\">\n                {questionTextGerman}\n              </h2>\n              <hr></hr>\n              <h2 className=\"pretest-question-text-english\">\n                {questionTextEnglish}\n              </h2>\n            </section>\n            <section className=\"pretest-answer-section\">\n              {answerOptions.map((answerOption, index) => (\n                <button\n                  id=\"pretest-answer-btn\"\n                  className={style}\n                  key={index}\n                  onClick={(e) =>\n                    handleAnswerClick(e, answerOption.answerClass)\n                  }\n                >\n                  {answerOption.answerText}\n                </button>\n              ))}\n              <button onClick={() => nextQuestion()} className=\"next-btn\">\n                Next\n              </button>\n              <p>{classOptions} </p>\n              <p>{courseMedia}</p>\n            </section>\n          </section>\n        )}\n      </div>\n    </MyContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}